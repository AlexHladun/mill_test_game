{"ast":null,"code":"var _jsxFileName = \"/Users/alistair/WebstormProjects/millionaire2/millionaire2/src/pages/QuestionPage/QuestionPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport OptionCell from \"../../components/OptionCell\";\nimport './QuestionPage.styles.css';\nimport questions from '../../gameConfig.json';\nimport { useSelector } from \"react-redux\";\nimport { selectCurrentQuestion } from \"../../redux/selectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const QuestionPage = () => {\n  _s();\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n  const currentQuestion = useSelector(selectCurrentQuestion);\n  const handleSelectAnswer = label => {\n    if (!selectedAnswer) {\n      console.log('label');\n      setSelectedAnswer(label);\n    }\n  };\n  useEffect(() => {}, [selectedAnswer]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"QuestionPage-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Question-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"Question-text\",\n        children: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Options-container\",\n        children: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(OptionCell, {\n          onClick: () => handleSelectAnswer(option.label),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"Options-label\",\n            children: option.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"Options-value\",\n            children: option.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 8\n          }, this)]\n        }, option.label, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Reward-block\",\n      children: questions.questions.map(({\n        reward\n      }) => /*#__PURE__*/_jsxDEV(OptionCell, {\n        className: 'Reward',\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"$\", reward]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 41\n        }, this)\n      }, reward, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 44\n      }, this)).reverse()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }, this);\n};\n_s(QuestionPage, \"DtwwF7CaJP5pwzBxhpILbej9/1w=\", false, function () {\n  return [useSelector];\n});\n_c = QuestionPage;\nvar _c;\n$RefreshReg$(_c, \"QuestionPage\");","map":{"version":3,"names":["React","useEffect","useState","OptionCell","questions","useSelector","selectCurrentQuestion","jsxDEV","_jsxDEV","QuestionPage","_s","selectedAnswer","setSelectedAnswer","currentQuestion","handleSelectAnswer","label","console","log","className","children","question","fileName","_jsxFileName","lineNumber","columnNumber","options","map","option","index","onClick","value","reward","reverse","_c","$RefreshReg$"],"sources":["/Users/alistair/WebstormProjects/millionaire2/millionaire2/src/pages/QuestionPage/QuestionPage.tsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\n\nimport OptionCell from \"../../components/OptionCell\";\nimport './QuestionPage.styles.css'\nimport questions from '../../gameConfig.json'\nimport { useSelector } from \"react-redux\";\nimport { selectCurrentQuestion } from \"../../redux/selectors\";\nimport { useAppDispatch } from \"../../utils/hooks\";\n\nexport const QuestionPage: React.FC=() => {\n\tconst [selectedAnswer, setSelectedAnswer] = useState('')\n\tconst currentQuestion=useSelector(selectCurrentQuestion)\n\n\tconst handleSelectAnswer = (label: string) => {\n\t\tif(!selectedAnswer) {\n\t\t\tconsole.log('label')\n\t\t\tsetSelectedAnswer(label)\n\t\t}\n\t}\n\tuseEffect(() => {\n\n\t}, [selectedAnswer])\n\treturn (\n\t\t<div className={\"QuestionPage-container\"}>\n\t\t\t<div className={\"Question-block\"}>\n\t\t\t\t<h1 className={\"Question-text\"}>{currentQuestion?.question}</h1>\n\t\t\t\t<div className={\"Options-container\"}>\n\t\t\t\t\t{currentQuestion?.options.map((option: { label: string; value: string }, index: number) => (\n\t\t\t\t\t\t<OptionCell key={option.label} onClick={() => handleSelectAnswer(option.label)} >\n\t\t\t\t\t\t\t<span className={\"Options-label\"}>{option.label}</span>\n\t\t\t\t\t\t\t<span className={\"Options-value\"}>{option.value}</span>\n\t\t\t\t\t\t</OptionCell>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={\"Reward-block\"}>\n\t\t\t\t{questions.questions.map(({reward}) => <OptionCell key={reward}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   className={'Reward'}><span>${reward}</span></OptionCell>).reverse()}\n\t\t\t</div>\n\t\t</div>\n\t)\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}