{"ast":null,"code":"var _jsxFileName = \"/Users/alistair/WebstormProjects/millionaire2/millionaire2/src/pages/QuestionPage/QuestionPage.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport OptionCell from \"../../components/OptionCell\";\nimport './QuestionPage.styles.css';\nimport questions from '../../gameConfig.json';\nimport { useSelector } from \"react-redux\";\nimport { selectCurrentQuestion, selectCurrentIndex } from \"../../redux/selectors\";\nimport { highlightReward } from \"../../utils\";\nimport { useAppDispatch } from \"../../utils/hooks\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const QuestionPage = () => {\n  _s();\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const currentQuestion = useSelector(selectCurrentQuestion);\n  const currentIndex = useSelector(selectCurrentIndex);\n\n  // const handleSelectAnswer=(label: string) => {\n  // \tif (selectedAnswer === '') {\n  // \t\tsetSelectedAnswer(label)\n  // \t}\n  // }\n  // const handleCheckAnswer=() => {\n  // \tif (currentQuestion?.rightAnswers.includes(selectedAnswer)) {\n  // \t\t// dispatch(nextQuestionAction())\n  // \t} else {\n  // \t\tnavigate('/final')\n  // \t}\n  // }\n  // useEffect(() => {\n  // \tif (currentIndex !== null&&currentIndex < 12) {\n  // \t\tsetSelectedAnswer('')\n  // \t} else {\n  // \t\tnavigate('/final')\n  // \t}\n  // }, [currentIndex])\n  //\n  // useEffect(() => {\n  // \tif (selectedAnswer) {\n  // \t\thandleCheckAnswer()\n  // \t}\n  // }, [selectedAnswer])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"QuestionPage-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Question-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"Question-text\",\n        children: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Options-container\",\n        children: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.options.map((option, index) => {\n          const isCorrectAnswer = currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.rightAnswers.includes(selectedAnswer);\n          const isOptionSelected = option.label === selectedAnswer;\n          const result = isOptionSelected && isCorrectAnswer ? 'correct' : isOptionSelected && !isCorrectAnswer ? 'wrong' : isOptionSelected ? 'selected' : '';\n          return /*#__PURE__*/_jsxDEV(OptionCell, {\n            onClick: () => handleSelectAnswer(option.label),\n            className: `${result}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"Options-label\",\n              children: option.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"Options-value\",\n              children: option.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 9\n            }, this)]\n          }, option.label, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 8\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Reward-block\",\n      children: questions.questions.map(({\n        reward\n      }, index) => /*#__PURE__*/_jsxDEV(OptionCell, {\n        className: `Reward`,\n        rewardColor: `${highlightReward(currentIndex, index)}`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"$\", reward]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 79\n        }, this)\n      }, reward, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 59\n      }, this)).reverse()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 3\n  }, this);\n};\n_s(QuestionPage, \"EeoL8EDzmgmg0gM/Zk8XpFHs8zo=\", false, function () {\n  return [useAppDispatch, useNavigate, useSelector, useSelector];\n});\n_c = QuestionPage;\nvar _c;\n$RefreshReg$(_c, \"QuestionPage\");","map":{"version":3,"names":["React","OptionCell","questions","useSelector","selectCurrentQuestion","selectCurrentIndex","highlightReward","useAppDispatch","useNavigate","jsxDEV","_jsxDEV","QuestionPage","_s","dispatch","navigate","currentQuestion","currentIndex","className","children","question","fileName","_jsxFileName","lineNumber","columnNumber","options","map","option","index","isCorrectAnswer","rightAnswers","includes","selectedAnswer","isOptionSelected","label","result","onClick","handleSelectAnswer","value","reward","rewardColor","reverse","_c","$RefreshReg$"],"sources":["/Users/alistair/WebstormProjects/millionaire2/millionaire2/src/pages/QuestionPage/QuestionPage.tsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\n\nimport OptionCell from \"../../components/OptionCell\";\nimport './QuestionPage.styles.css'\nimport questions from '../../gameConfig.json'\nimport {useSelector} from \"react-redux\";\nimport {selectCurrentQuestion, selectCurrentIndex} from \"../../redux/selectors\";\nimport {highlightReward} from \"../../utils\";\nimport {useAppDispatch} from \"../../utils/hooks\";\nimport {nextQuestionAction} from \"../../redux/actions\";\nimport {useNavigate} from \"react-router-dom\";\n\nexport const QuestionPage: React.FC=() => {\n\tconst dispatch=useAppDispatch()\n\tconst navigate=useNavigate()\n\tconst currentQuestion=useSelector(selectCurrentQuestion)\n\tconst currentIndex=useSelector(selectCurrentIndex)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t// const handleSelectAnswer=(label: string) => {\n\t// \tif (selectedAnswer === '') {\n\t// \t\tsetSelectedAnswer(label)\n\t// \t}\n\t// }\n\t// const handleCheckAnswer=() => {\n\t// \tif (currentQuestion?.rightAnswers.includes(selectedAnswer)) {\n\t// \t\t// dispatch(nextQuestionAction())\n\t// \t} else {\n\t// \t\tnavigate('/final')\n\t// \t}\n\t// }\n\t// useEffect(() => {\n\t// \tif (currentIndex !== null&&currentIndex < 12) {\n\t// \t\tsetSelectedAnswer('')\n\t// \t} else {\n\t// \t\tnavigate('/final')\n\t// \t}\n\t// }, [currentIndex])\n\t//\n\t// useEffect(() => {\n\t// \tif (selectedAnswer) {\n\t// \t\thandleCheckAnswer()\n\t// \t}\n\t// }, [selectedAnswer])\n\n\treturn (\n\t\t<div className={\"QuestionPage-container\"}>\n\t\t\t<div className={\"Question-block\"}>\n\t\t\t\t<h1 className={\"Question-text\"}>{currentQuestion?.question}</h1>\n\t\t\t\t<div className={\"Options-container\"}>\n\t\t\t\t\t{currentQuestion?.options.map((option: { label: string; value: string }, index: number) => {\n\n\t\t\t\t\t\tconst isCorrectAnswer= currentQuestion?.rightAnswers.includes(selectedAnswer);\n\t\t\t\t\t\tconst isOptionSelected= option.label === selectedAnswer;\n\n\t\t\t\t\t\tconst result=\n\t\t\t\t\t\t\tisOptionSelected && isCorrectAnswer ? 'correct' :\n\t\t\t\t\t\t\t\tisOptionSelected && !isCorrectAnswer ? 'wrong' :\n\t\t\t\t\t\t\t\t\tisOptionSelected ? 'selected' :\n\t\t\t\t\t\t\t\t\t\t'';\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<OptionCell key={option.label} onClick={() => handleSelectAnswer(option.label)}\n\t\t\t\t\t\t\t\t\t\tclassName={`${result}`}>\n\t\t\t\t\t\t\t\t<span className={\"Options-label\"}>{option.label}</span>\n\t\t\t\t\t\t\t\t<span className={\"Options-value\"}>{option.value}</span>\n\t\t\t\t\t\t\t</OptionCell>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={\"Reward-block\"}>\n\t\t\t\t{questions.questions.map(({reward}, index: number) => <OptionCell key={reward}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  className={`Reward`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  rewardColor={`${highlightReward(currentIndex, index)}`}><span>${reward}</span></OptionCell>).reverse()}\n\t\t\t</div>\n\t\t</div>\n\t)\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}