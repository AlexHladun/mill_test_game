{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport gameConfig from '../gameConfig.json';\nconst initialState = {\n  allQuestions: gameConfig.questions,\n  currentQuestion: null,\n  currentIndex: null,\n  totalScore: 0\n};\nexport const mainSlice = createSlice({\n  name: 'mainSlice',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase('startGame', (state, action) => {\n      state.currentIndex = 0;\n      state.currentQuestion = state.allQuestions[state.currentIndex];\n    }).addCase('nextQuestion', (state, action) => {\n      if (state.currentIndex !== null) {\n        state.currentIndex += 1;\n        state.totalScore = Number(state.allQuestions[state.currentIndex - 1].reward);\n        state.currentQuestion = state.allQuestions[state.currentIndex];\n      }\n    }).addCase('tryAgain', state => {\n      state = {\n        ...initialState\n      };\n    });\n  }\n});\nexport default mainSlice.reducer;","map":{"version":3,"names":["createSlice","gameConfig","initialState","allQuestions","questions","currentQuestion","currentIndex","totalScore","mainSlice","name","reducers","extraReducers","builder","addCase","state","action","Number","reward","reducer"],"sources":["/Users/alistair/WebstormProjects/millionaire2/millionaire2/src/redux/mainSlice.ts"],"sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\nimport gameConfig from '../gameConfig.json'\n\ninterface IQuestion {\n\tquestion: string\n\treward: string\n\toptions: { label: string, value: string }[]\n\trightAnswers: string[]\n}\n\nexport interface MainState {\n\tallQuestions: IQuestion[]\n\tcurrentQuestion: IQuestion | null\n\tcurrentIndex: number | null\n\ttotalScore: number\n}\n\nconst initialState: MainState={\n\tallQuestions: gameConfig.questions,\n\tcurrentQuestion: null,\n\tcurrentIndex: null,\n\ttotalScore: 0\n};\n\n\nexport const mainSlice=createSlice({\n\tname: 'mainSlice',\n\tinitialState,\n\treducers: {},\n\textraReducers: (builder) => {\n\t\tbuilder\n\t\t\t.addCase('startGame', (state, action) => {\n\t\t\t\tstate.currentIndex=0\n\t\t\t\tstate.currentQuestion=state.allQuestions[ state.currentIndex ]\n\t\t\t})\n\t\t\t.addCase('nextQuestion', (state, action) => {\n\t\t\t\tif(state.currentIndex !== null) {\n\t\t\t\t\tstate.currentIndex+=1\n\t\t\t\t\tstate.totalScore=Number(state.allQuestions[state.currentIndex-1].reward)\n\t\t\t\t\tstate.currentQuestion=state.allQuestions[ state.currentIndex ]\n\t\t\t\t}\n\t\t\t})\n\t\t\t.addCase('tryAgain', (state) => {\n\t\t\t\tstate = {...initialState}\n\t\t\t})\n\t}\n});\n\n\nexport default mainSlice.reducer;\n"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAC5C,OAAOC,UAAU,MAAM,oBAAoB;AAgB3C,MAAMC,YAAuB,GAAC;EAC7BC,YAAY,EAAEF,UAAU,CAACG,SAAS;EAClCC,eAAe,EAAE,IAAI;EACrBC,YAAY,EAAE,IAAI;EAClBC,UAAU,EAAE;AACb,CAAC;AAGD,OAAO,MAAMC,SAAS,GAACR,WAAW,CAAC;EAClCS,IAAI,EAAE,WAAW;EACjBP,YAAY;EACZQ,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC3BA,OAAO,CACLC,OAAO,CAAC,WAAW,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACxCD,KAAK,CAACR,YAAY,GAAC,CAAC;MACpBQ,KAAK,CAACT,eAAe,GAACS,KAAK,CAACX,YAAY,CAAEW,KAAK,CAACR,YAAY,CAAE;IAC/D,CAAC,CAAC,CACDO,OAAO,CAAC,cAAc,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3C,IAAGD,KAAK,CAACR,YAAY,KAAK,IAAI,EAAE;QAC/BQ,KAAK,CAACR,YAAY,IAAE,CAAC;QACrBQ,KAAK,CAACP,UAAU,GAACS,MAAM,CAACF,KAAK,CAACX,YAAY,CAACW,KAAK,CAACR,YAAY,GAAC,CAAC,CAAC,CAACW,MAAM,CAAC;QACxEH,KAAK,CAACT,eAAe,GAACS,KAAK,CAACX,YAAY,CAAEW,KAAK,CAACR,YAAY,CAAE;MAC/D;IACD,CAAC,CAAC,CACDO,OAAO,CAAC,UAAU,EAAGC,KAAK,IAAK;MAC/BA,KAAK,GAAG;QAAC,GAAGZ;MAAY,CAAC;IAC1B,CAAC,CAAC;EACJ;AACD,CAAC,CAAC;AAGF,eAAeM,SAAS,CAACU,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}