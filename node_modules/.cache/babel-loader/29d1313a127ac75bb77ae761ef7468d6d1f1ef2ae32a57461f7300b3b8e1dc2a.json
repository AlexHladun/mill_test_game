{"ast":null,"code":"var _jsxFileName = \"/Users/alistair/WebstormProjects/millionaire2/millionaire2/src/pages/QuestionPage/QuestionPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport OptionCell from \"../../components/OptionCell\";\nimport './QuestionPage.styles.css';\nimport questions from '../../gameConfig.json';\nimport { useSelector } from \"react-redux\";\nimport { selectCurrentQuestion, seleCurrentIndex } from \"../../redux/selectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const QuestionPage = () => {\n  _s();\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n  const currentQuestion = useSelector(selectCurrentQuestion);\n  const currentIndex = useSelector(seleCurrentIndex);\n  const handleSelectAnswer = label => {\n    if (selectedAnswer === '') {\n      setSelectedAnswer(label);\n    }\n  };\n  const highlightReward = (currentIndex, index) => {\n    if (currentIndex) {\n      const range = currentIndex - index;\n      if (range > 0) {\n        console.log(range, 'gray');\n        return 'gray';\n      } else if (range < 0) {\n        console.log(range, 'black');\n        return 'black';\n      } else {\n        console.log(range, 'yellow');\n        return 'yellow';\n      }\n    }\n  };\n  useEffect(() => {}, [selectedAnswer]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"QuestionPage-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Question-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"Question-text\",\n        children: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Options-container\",\n        children: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(OptionCell, {\n          onClick: () => handleSelectAnswer(option.label),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"Options-label\",\n            children: option.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"Options-value\",\n            children: option.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 8\n          }, this)]\n        }, option.label, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Reward-block\",\n      children: questions.questions.map(({\n        reward\n      }, index) => /*#__PURE__*/_jsxDEV(OptionCell, {\n        className: `Reward`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `${highlightReward(currentIndex, index)}`,\n          children: [\"$\", reward]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 44\n        }, this)\n      }, reward, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 59\n      }, this)).reverse()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }, this);\n};\n_s(QuestionPage, \"KRiFCsJZTYD2D4rDfAbH9JuUjV0=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = QuestionPage;\nvar _c;\n$RefreshReg$(_c, \"QuestionPage\");","map":{"version":3,"names":["React","useEffect","useState","OptionCell","questions","useSelector","selectCurrentQuestion","seleCurrentIndex","jsxDEV","_jsxDEV","QuestionPage","_s","selectedAnswer","setSelectedAnswer","currentQuestion","currentIndex","handleSelectAnswer","label","highlightReward","index","range","console","log","className","children","question","fileName","_jsxFileName","lineNumber","columnNumber","options","map","option","onClick","value","reward","reverse","_c","$RefreshReg$"],"sources":["/Users/alistair/WebstormProjects/millionaire2/millionaire2/src/pages/QuestionPage/QuestionPage.tsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\n\nimport OptionCell from \"../../components/OptionCell\";\nimport './QuestionPage.styles.css'\nimport questions from '../../gameConfig.json'\nimport {useSelector} from \"react-redux\";\nimport {selectCurrentQuestion, seleCurrentIndex} from \"../../redux/selectors\";\nimport {useAppDispatch} from \"../../utils/hooks\";\n\nexport const QuestionPage: React.FC=() => {\n\tconst [selectedAnswer, setSelectedAnswer]=useState('')\n\tconst currentQuestion=useSelector(selectCurrentQuestion)\n\tconst currentIndex=useSelector(seleCurrentIndex)\n\tconst handleSelectAnswer=(label: string) => {\n\t\tif (selectedAnswer === '') {\n\t\t\tsetSelectedAnswer(label)\n\n\t\t}\n\t}\n\n\tconst highlightReward=(currentIndex: number | null, index: number): string | undefined => {\n\t\tif (currentIndex) {\n\t\t\tconst range=currentIndex - index\n\t\t\tif (range > 0) {\n\t\t\t\tconsole.log(range, 'gray')\n\t\t\t\treturn 'gray';\n\t\t\t} else if (range < 0) {\n\t\t\t\tconsole.log(range, 'black')\n\t\t\t\treturn 'black';\n\t\t\t} else {\n\t\t\t\tconsole.log(range, 'yellow')\n\t\t\t\treturn 'yellow';\n\t\t\t}\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\n\t}, [selectedAnswer])\n\treturn (\n\t\t<div className={\"QuestionPage-container\"}>\n\t\t\t<div className={\"Question-block\"}>\n\t\t\t\t<h1 className={\"Question-text\"}>{currentQuestion?.question}</h1>\n\t\t\t\t<div className={\"Options-container\"}>\n\t\t\t\t\t{currentQuestion?.options.map((option: { label: string; value: string }, index: number) => (\n\t\t\t\t\t\t<OptionCell key={option.label} onClick={() => handleSelectAnswer(option.label)}>\n\t\t\t\t\t\t\t<span className={\"Options-label\"}>{option.label}</span>\n\t\t\t\t\t\t\t<span className={\"Options-value\"}>{option.value}</span>\n\t\t\t\t\t\t</OptionCell>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={\"Reward-block\"}>\n\t\t\t\t{questions.questions.map(({reward}, index: number) => <OptionCell key={reward}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  className={`Reward`}><span className={`${highlightReward(currentIndex, index)}`}>${reward}</span></OptionCell>).reverse()}\n\t\t\t</div>\n\t\t</div>\n\t)\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}