{"ast":null,"code":"var _jsxFileName = \"/Users/alistair/WebstormProjects/millionaire2/millionaire2/src/pages/QuestionPage/QuestionPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport OptionCell from \"../../components/OptionCell\";\nimport './QuestionPage.styles.css';\nimport questions from '../../gameConfig.json';\nimport { useSelector } from \"react-redux\";\nimport { selectCurrentQuestion, selectCurrentIndex, selectNumberOfAnswers } from \"../../redux/selectors\";\nimport { highlightReward } from \"../../utils\";\nimport { useAppDispatch } from \"../../utils/hooks\";\nimport { nextQuestionAction } from \"../../redux/actions\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const QuestionPage = () => {\n  _s();\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const currentQuestion = useSelector(selectCurrentQuestion);\n  const currentIndex = useSelector(selectCurrentIndex);\n  const numberOfCorrectAnswers = useSelector(selectNumberOfAnswers);\n  const options = (currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.options) || [];\n  // Стан для відстеження обраних відповідей\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\n\n  // Стан для відстеження статусу правильності відповідей\n  const [isCorrectAnswers, setIsCorrectAnswers] = useState(null);\n\n  // Обробник вибору відповіді\n  const handleSelectAnswer = selectedOption => {\n    if (selectedAnswers.length < numberOfCorrectAnswers) {\n      setSelectedAnswers(prevSelected => [...prevSelected, selectedOption]);\n    }\n  };\n  useEffect(() => {\n    if (selectedAnswers.length === 0) {\n      setIsCorrectAnswers(null);\n      return;\n    }\n\n    // Перевірка правильності через 3 секунди\n    const timeoutId = setTimeout(() => {\n      // Перевірка, чи обрані відповіді правильні\n      const correctAnswers = options.filter(option => selectedAnswers.includes(option.label)).map(option => option.isCorrect);\n\n      // Перевірка, чи кількість правильних відповідей співпадає з numberOfCorrectAnswers\n      const isCorrect = correctAnswers.length === numberOfCorrectAnswers && correctAnswers.every(item => item === true);\n      setIsCorrectAnswers(isCorrect);\n    }, 3000);\n    dispatch(nextQuestionAction());\n    return () => clearTimeout(timeoutId); // Очищення таймеру при зміні стану\n  }, [selectedAnswers, options, numberOfCorrectAnswers]);\n\n  // const handleSelectAnswer=(label: string) => {\n  // \tif (selectedAnswer === '') {\n  // \t\tsetSelectedAnswer(label)\n  // \t}\n  // }\n  // const handleCheckAnswer=() => {\n  // \tif (currentQuestion?.rightAnswers.includes(selectedAnswer)) {\n  // \t\t// dispatch(nextQuestionAction())\n  // \t} else {\n  // \t\tnavigate('/final')\n  // \t}\n  // }\n  useEffect(() => {\n    if (currentIndex !== null && currentIndex < questions.questions.length) {\n      setSelectedAnswers([]);\n    } else {\n      navigate('/final');\n    }\n  }, [currentIndex]);\n  //\n  // useEffect(() => {\n  // \tif (selectedAnswer) {\n  // \t\thandleCheckAnswer()\n  // \t}\n  // }, [selectedAnswer])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"QuestionPage-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Question-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"Question-text\",\n        children: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Options-container\",\n        children: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.options.map((option, index) => {\n          return /*#__PURE__*/_jsxDEV(OptionCell, {\n            onClick: () => handleSelectAnswer(option.label),\n            className: `${selectedAnswers.includes(option.label) ? 'selected' : ''}\n            \t\t\t\t\t\t${isCorrectAnswers !== null && selectedAnswers.includes(option.label) && isCorrectAnswers ? 'correct' : ''}\n           \t\t\t\t\t\t\t${isCorrectAnswers !== null && selectedAnswers.includes(option.label) && !isCorrectAnswers ? 'wrong' : ''}\n\t\t\t\t\t\t\t\t\t\t`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"Options-label\",\n              children: option.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"Options-value\",\n              children: option.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 9\n            }, this)]\n          }, option.label, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 8\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Reward-block\",\n      children: questions.questions.map(({\n        reward\n      }, index) => {\n        return /*#__PURE__*/_jsxDEV(OptionCell, {\n          className: `Reward`,\n          rewardColor: `${highlightReward(currentIndex, index)}`,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"$\", reward]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 8\n          }, this)\n        }, reward, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 7\n        }, this);\n      }).reverse()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 3\n  }, this);\n};\n_s(QuestionPage, \"ZUl/3LrVI2L677K2mh3OTGvyDig=\", false, function () {\n  return [useAppDispatch, useNavigate, useSelector, useSelector, useSelector];\n});\n_c = QuestionPage;\nvar _c;\n$RefreshReg$(_c, \"QuestionPage\");","map":{"version":3,"names":["React","useEffect","useState","OptionCell","questions","useSelector","selectCurrentQuestion","selectCurrentIndex","selectNumberOfAnswers","highlightReward","useAppDispatch","nextQuestionAction","useNavigate","jsxDEV","_jsxDEV","QuestionPage","_s","dispatch","navigate","currentQuestion","currentIndex","numberOfCorrectAnswers","options","selectedAnswers","setSelectedAnswers","isCorrectAnswers","setIsCorrectAnswers","handleSelectAnswer","selectedOption","length","prevSelected","timeoutId","setTimeout","correctAnswers","filter","option","includes","label","map","isCorrect","every","item","clearTimeout","className","children","question","fileName","_jsxFileName","lineNumber","columnNumber","index","onClick","value","reward","rewardColor","reverse","_c","$RefreshReg$"],"sources":["/Users/alistair/WebstormProjects/millionaire2/millionaire2/src/pages/QuestionPage/QuestionPage.tsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\n\nimport OptionCell from \"../../components/OptionCell\";\nimport './QuestionPage.styles.css'\nimport questions from '../../gameConfig.json'\nimport {useSelector} from \"react-redux\";\nimport {selectCurrentQuestion, selectCurrentIndex, selectNumberOfAnswers} from \"../../redux/selectors\";\nimport {highlightReward} from \"../../utils\";\nimport {useAppDispatch} from \"../../utils/hooks\";\nimport {nextQuestionAction} from \"../../redux/actions\";\nimport {useNavigate} from \"react-router-dom\";\n\n\nexport const QuestionPage: React.FC=() => {\n\tconst dispatch=useAppDispatch()\n\tconst navigate=useNavigate()\n\tconst currentQuestion=useSelector(selectCurrentQuestion)\n\tconst currentIndex=useSelector(selectCurrentIndex)\n\tconst numberOfCorrectAnswers = useSelector(selectNumberOfAnswers)\n\tconst options=currentQuestion?.options || [];\n\t// Стан для відстеження обраних відповідей\n\tconst [selectedAnswers, setSelectedAnswers] = useState<string[]>([]);\n\n\t// Стан для відстеження статусу правильності відповідей\n\tconst [isCorrectAnswers, setIsCorrectAnswers] = useState<boolean | null>(null);\n\n\t// Обробник вибору відповіді\n\tconst handleSelectAnswer = (selectedOption: string) => {\n\t\tif (selectedAnswers.length < numberOfCorrectAnswers) {\n\t\t\tsetSelectedAnswers((prevSelected) => [...prevSelected, selectedOption]);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tif (selectedAnswers.length === 0) {\n\t\t\tsetIsCorrectAnswers(null);\n\t\t\treturn;\n\t\t}\n\n\t\t// Перевірка правильності через 3 секунди\n\t\tconst timeoutId = setTimeout(() => {\n\t\t\t// Перевірка, чи обрані відповіді правильні\n\t\t\tconst correctAnswers = options\n\t\t\t\t.filter((option) => selectedAnswers.includes(option.label))\n\t\t\t\t.map((option) => option.isCorrect);\n\n\t\t\t// Перевірка, чи кількість правильних відповідей співпадає з numberOfCorrectAnswers\n\t\t\tconst isCorrect = correctAnswers.length === numberOfCorrectAnswers && correctAnswers.every(item => item === true);\n\n\t\t\tsetIsCorrectAnswers(isCorrect);\n\t\t}, 3000);\n\t\tdispatch(nextQuestionAction())\n\t\treturn () => clearTimeout(timeoutId); // Очищення таймеру при зміні стану\n\t}, [selectedAnswers, options, numberOfCorrectAnswers]);\n\n\n\n\t// const handleSelectAnswer=(label: string) => {\n\t// \tif (selectedAnswer === '') {\n\t// \t\tsetSelectedAnswer(label)\n\t// \t}\n\t// }\n\t// const handleCheckAnswer=() => {\n\t// \tif (currentQuestion?.rightAnswers.includes(selectedAnswer)) {\n\t// \t\t// dispatch(nextQuestionAction())\n\t// \t} else {\n\t// \t\tnavigate('/final')\n\t// \t}\n\t// }\n\tuseEffect(() => {\n\t\tif (currentIndex !== null && currentIndex < questions.questions.length) {\n\t\t\tsetSelectedAnswers([])\n\t\t} else {\n\t\t\tnavigate('/final')\n\t\t}\n\t}, [currentIndex])\n\t//\n\t// useEffect(() => {\n\t// \tif (selectedAnswer) {\n\t// \t\thandleCheckAnswer()\n\t// \t}\n\t// }, [selectedAnswer])\n\n\treturn (\n\t\t<div className={\"QuestionPage-container\"}>\n\t\t\t<div className={\"Question-block\"}>\n\t\t\t\t<h1 className={\"Question-text\"}>{currentQuestion?.question}</h1>\n\t\t\t\t<div className={\"Options-container\"}>\n\t\t\t\t\t{currentQuestion?.options.map((option: {\n\t\t\t\t\t\tlabel: string;\n\t\t\t\t\t\tvalue: string,\n\t\t\t\t\t\tisCorrect: boolean\n\t\t\t\t\t}, index: number) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<OptionCell\n\t\t\t\t\t\t\t\tkey={option.label}\n\t\t\t\t\t\t\t\tonClick={() => handleSelectAnswer(option.label)}\n\t\t\t\t\t\t\t\tclassName={`${selectedAnswers.includes(option.label) ? 'selected' : ''}\n            \t\t\t\t\t\t${isCorrectAnswers !== null &&\n\t\t\t\t\t\t\t\t\tselectedAnswers.includes(option.label) &&\n\t\t\t\t\t\t\t\t\tisCorrectAnswers\n\t\t\t\t\t\t\t\t\t\t? 'correct'\n\t\t\t\t\t\t\t\t\t\t: ''}\n           \t\t\t\t\t\t\t${isCorrectAnswers !== null &&\n\t\t\t\t\t\t\t\t\tselectedAnswers.includes(option.label) &&\n\t\t\t\t\t\t\t\t\t!isCorrectAnswers\n\t\t\t\t\t\t\t\t\t\t? 'wrong'\n\t\t\t\t\t\t\t\t\t\t: ''}\n\t\t\t\t\t\t\t\t\t\t`}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span className={\"Options-label\"}>{option.label}</span>\n\t\t\t\t\t\t\t\t<span className={\"Options-value\"}>{option.value}</span>\n\t\t\t\t\t\t\t</OptionCell>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={\"Reward-block\"}>\n\t\t\t\t{questions.questions.map(({reward}, index: number) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<OptionCell\n\t\t\t\t\t\t\tkey={reward}\n\t\t\t\t\t\t\tclassName={`Reward`}\n\t\t\t\t\t\t\trewardColor={`${highlightReward(currentIndex, index)}`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span>${reward}</span>\n\t\t\t\t\t\t</OptionCell>\n\t\t\t\t\t)\n\t\t\t\t}).reverse()}\n\t\t\t</div>\n\t\t</div>\n\t)\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}