{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';import gameConfig from'../gameConfig.json';var initialState={numberOfCorrectAnswers:gameConfig.numberOfCorrectAnswers,allQuestions:gameConfig.questions,currentQuestion:null,currentIndex:null,totalScore:0};export var mainSlice=createSlice({name:'mainSlice',initialState:initialState,reducers:{},extraReducers:function extraReducers(builder){builder.addCase('startGame',function(state,action){state.currentIndex=0;state.currentQuestion=state.allQuestions[state.currentIndex];}).addCase('nextQuestion',function(state,action){if(state.currentIndex!==null){state.currentIndex+=1;state.totalScore=Number(state.allQuestions[state.currentIndex-1].reward);state.currentQuestion=state.allQuestions[state.currentIndex];}}).addCase('tryAgain',function(state){state.allQuestions=gameConfig.questions;state.totalScore=0;state.currentQuestion=null;state.currentIndex=null;});}});export default mainSlice.reducer;","map":{"version":3,"names":["createSlice","gameConfig","initialState","numberOfCorrectAnswers","allQuestions","questions","currentQuestion","currentIndex","totalScore","mainSlice","name","reducers","extraReducers","builder","addCase","state","action","Number","reward","reducer"],"sources":["/Users/alistair/WebstormProjects/millionaire2/millionaire2/src/redux/mainSlice.ts"],"sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\nimport gameConfig from '../gameConfig.json'\n\nexport interface IQuestion {\n\tquestion: string\n\treward: string\n\toptions: { label: string, value: string, isCorrect: boolean }[]\n}\n\nexport interface MainState {\n\tnumberOfCorrectAnswers: number\n\tallQuestions: IQuestion[]\n\tcurrentQuestion: IQuestion | null\n\tcurrentIndex: number | null\n\ttotalScore: number\n}\n\nconst initialState: MainState={\n\tnumberOfCorrectAnswers: gameConfig.numberOfCorrectAnswers,\n\tallQuestions: gameConfig.questions,\n\tcurrentQuestion: null,\n\tcurrentIndex: null,\n\ttotalScore: 0\n};\n\n\nexport const mainSlice=createSlice({\n\tname: 'mainSlice',\n\tinitialState,\n\treducers: {},\n\textraReducers: (builder) => {\n\t\tbuilder\n\t\t\t.addCase('startGame', (state, action) => {\n\t\t\t\tstate.currentIndex=0\n\t\t\t\tstate.currentQuestion=state.allQuestions[ state.currentIndex ]\n\t\t\t})\n\t\t\t.addCase('nextQuestion', (state, action) => {\n\t\t\t\tif(state.currentIndex !== null) {\n\t\t\t\t\tstate.currentIndex+=1\n\t\t\t\t\tstate.totalScore=Number(state.allQuestions[state.currentIndex-1].reward)\n\t\t\t\t\tstate.currentQuestion=state.allQuestions[ state.currentIndex ]\n\t\t\t\t}\n\t\t\t})\n\t\t\t.addCase('tryAgain', (state) => {\n\t\t\t\tstate.allQuestions = gameConfig.questions\n\t\t\t\tstate.totalScore = 0\n\t\t\t\tstate.currentQuestion = null\n\t\t\t\tstate.currentIndex = null\n\t\t\t})\n\t}\n});\n\n\nexport default mainSlice.reducer;\n"],"mappings":"AAAA,OAAQA,WAAW,KAAO,kBAAkB,CAC5C,MAAO,CAAAC,UAAU,KAAM,oBAAoB,CAgB3C,GAAM,CAAAC,YAAuB,CAAC,CAC7BC,sBAAsB,CAAEF,UAAU,CAACE,sBAAsB,CACzDC,YAAY,CAAEH,UAAU,CAACI,SAAS,CAClCC,eAAe,CAAE,IAAI,CACrBC,YAAY,CAAE,IAAI,CAClBC,UAAU,CAAE,CACb,CAAC,CAGD,MAAO,IAAM,CAAAC,SAAS,CAACT,WAAW,CAAC,CAClCU,IAAI,CAAE,WAAW,CACjBR,YAAY,CAAZA,YAAY,CACZS,QAAQ,CAAE,CAAC,CAAC,CACZC,aAAa,CAAE,SAAAA,cAACC,OAAO,CAAK,CAC3BA,OAAO,CACLC,OAAO,CAAC,WAAW,CAAE,SAACC,KAAK,CAAEC,MAAM,CAAK,CACxCD,KAAK,CAACR,YAAY,CAAC,CAAC,CACpBQ,KAAK,CAACT,eAAe,CAACS,KAAK,CAACX,YAAY,CAAEW,KAAK,CAACR,YAAY,CAAE,CAC/D,CAAC,CAAC,CACDO,OAAO,CAAC,cAAc,CAAE,SAACC,KAAK,CAAEC,MAAM,CAAK,CAC3C,GAAGD,KAAK,CAACR,YAAY,GAAK,IAAI,CAAE,CAC/BQ,KAAK,CAACR,YAAY,EAAE,CAAC,CACrBQ,KAAK,CAACP,UAAU,CAACS,MAAM,CAACF,KAAK,CAACX,YAAY,CAACW,KAAK,CAACR,YAAY,CAAC,CAAC,CAAC,CAACW,MAAM,CAAC,CACxEH,KAAK,CAACT,eAAe,CAACS,KAAK,CAACX,YAAY,CAAEW,KAAK,CAACR,YAAY,CAAE,CAC/D,CACD,CAAC,CAAC,CACDO,OAAO,CAAC,UAAU,CAAE,SAACC,KAAK,CAAK,CAC/BA,KAAK,CAACX,YAAY,CAAGH,UAAU,CAACI,SAAS,CACzCU,KAAK,CAACP,UAAU,CAAG,CAAC,CACpBO,KAAK,CAACT,eAAe,CAAG,IAAI,CAC5BS,KAAK,CAACR,YAAY,CAAG,IAAI,CAC1B,CAAC,CAAC,CACJ,CACD,CAAC,CAAC,CAGF,cAAe,CAAAE,SAAS,CAACU,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}