{"ast":null,"code":"var _jsxFileName = \"/Users/alistair/WebstormProjects/millionaire2/millionaire2/src/pages/QuestionPage/QuestionPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport OptionCell from \"../../components/OptionCell\";\nimport './QuestionPage.styles.css';\nimport questions from '../../gameConfig.json';\nimport { useSelector } from \"react-redux\";\nimport { selectCurrentQuestion, selectCurrentIndex, selectNumberOfAnswers } from \"../../redux/selectors\";\nimport { formatNumberWithCommas, highlightReward } from \"../../utils\";\nimport { useAppDispatch } from \"../../utils/hooks\";\nimport { nextQuestionAction } from \"../../redux/actions\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const QuestionPage = () => {\n  _s();\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const currentQuestion = useSelector(selectCurrentQuestion);\n  const currentIndex = useSelector(selectCurrentIndex);\n  const numberOfCorrectAnswers = useSelector(selectNumberOfAnswers);\n  const options = (currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.options) || [];\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\n  const [isCorrectAnswers, setIsCorrectAnswers] = useState(null);\n  const handleSelectAnswer = selectedOption => {\n    if (selectedAnswers.length < numberOfCorrectAnswers) {\n      setSelectedAnswers(prevSelected => [...prevSelected, selectedOption]);\n    }\n  };\n  useEffect(() => {\n    if (selectedAnswers.length === 0) {\n      setIsCorrectAnswers(null);\n      return;\n    }\n    const timeoutId = setTimeout(() => {\n      const correctAnswers = options.filter(option => selectedAnswers.includes(option.label)).map(option => option.isCorrect);\n      const isCorrect = correctAnswers.length === numberOfCorrectAnswers && correctAnswers.every(item => item === true);\n      setIsCorrectAnswers(isCorrect);\n      if (isCorrect) {\n        setTimeout(() => {\n          dispatch(nextQuestionAction());\n        }, 1500);\n      } else {\n        setTimeout(() => {\n          navigate('/final');\n        }, 1500);\n      }\n    }, 2000);\n    return () => clearTimeout(timeoutId); // Очищення таймеру при зміні стану\n  }, [selectedAnswers, options, numberOfCorrectAnswers, dispatch, navigate]);\n  useEffect(() => {\n    if (currentIndex !== null && currentIndex < questions.questions.length) {\n      setSelectedAnswers([]);\n    } else {\n      navigate('/final');\n    }\n  }, [currentIndex]);\n  const renderQuestionOptions = ({\n    currentQuestion,\n    selectedAnswers,\n    isCorrectAnswers,\n    handleSelectAnswer\n  }) => {\n    return currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.options.map((option, index) => {\n      const isSelected = selectedAnswers.includes(option.label);\n      const isCorrect = isCorrectAnswers !== null && isSelected && isCorrectAnswers;\n      const isWrong = isCorrectAnswers !== null && isSelected && !isCorrectAnswers;\n      const optionCellStyles = {};\n      if (isSelected) {\n        optionCellStyles.selected = true;\n      }\n      if (isCorrect) {\n        optionCellStyles.selected = false;\n        optionCellStyles.correct = true;\n      }\n      if (isWrong) {\n        optionCellStyles.selected = false;\n        optionCellStyles.wrong = true;\n      }\n      return /*#__PURE__*/_jsxDEV(OptionCell, {\n        onClick: () => handleSelectAnswer(option.label),\n        style: optionCellStyles,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"Options-label\",\n          children: option.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"Options-value\",\n          children: option.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 6\n        }, this)]\n      }, option.label, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 5\n      }, this);\n    });\n  };\n  const renderRewards = ({\n    questions,\n    currentIndex,\n    highlightReward,\n    formatNumberWithCommas\n  }) => {\n    return questions.map((reward, index) => {\n      const rewardColor = highlightReward(currentIndex, index);\n      return /*#__PURE__*/_jsxDEV(OptionCell, {\n        className: `Reward`,\n        rewardColor: rewardColor,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"$\", formatNumberWithCommas(Number(reward))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 7\n        }, this)\n      }, reward, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 6\n      }, this);\n    }).reverse();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"QuestionPage-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Question-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"Question-text\",\n        children: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Options-container\",\n        children: renderQuestionOptions({\n          currentQuestion,\n          selectedAnswers,\n          isCorrectAnswers,\n          handleSelectAnswer\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Reward-block\",\n      children: renderRewards({\n        questions: questions.questions.map(question => question.reward),\n        currentIndex,\n        highlightReward,\n        formatNumberWithCommas\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 3\n  }, this);\n};\n_s(QuestionPage, \"ZUl/3LrVI2L677K2mh3OTGvyDig=\", false, function () {\n  return [useAppDispatch, useNavigate, useSelector, useSelector, useSelector];\n});\n_c = QuestionPage;\nvar _c;\n$RefreshReg$(_c, \"QuestionPage\");","map":{"version":3,"names":["React","useEffect","useState","OptionCell","questions","useSelector","selectCurrentQuestion","selectCurrentIndex","selectNumberOfAnswers","formatNumberWithCommas","highlightReward","useAppDispatch","nextQuestionAction","useNavigate","jsxDEV","_jsxDEV","QuestionPage","_s","dispatch","navigate","currentQuestion","currentIndex","numberOfCorrectAnswers","options","selectedAnswers","setSelectedAnswers","isCorrectAnswers","setIsCorrectAnswers","handleSelectAnswer","selectedOption","length","prevSelected","timeoutId","setTimeout","correctAnswers","filter","option","includes","label","map","isCorrect","every","item","clearTimeout","renderQuestionOptions","index","isSelected","isWrong","optionCellStyles","selected","correct","wrong","onClick","style","children","className","fileName","_jsxFileName","lineNumber","columnNumber","value","renderRewards","reward","rewardColor","Number","reverse","question","_c","$RefreshReg$"],"sources":["/Users/alistair/WebstormProjects/millionaire2/millionaire2/src/pages/QuestionPage/QuestionPage.tsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\n\nimport OptionCell from \"../../components/OptionCell\";\nimport './QuestionPage.styles.css'\nimport questions from '../../gameConfig.json'\nimport {useSelector} from \"react-redux\";\nimport {selectCurrentQuestion, selectCurrentIndex, selectNumberOfAnswers} from \"../../redux/selectors\";\nimport {formatNumberWithCommas, highlightReward} from \"../../utils\";\nimport {useAppDispatch} from \"../../utils/hooks\";\nimport {nextQuestionAction} from \"../../redux/actions\";\nimport {useNavigate} from \"react-router-dom\";\nimport {IQuestion} from \"../../redux/mainSlice\";\n\n\ninterface IRenderRewards {\n\tquestions: string[]\n\tcurrentIndex: number | null\n\tformatNumberWithCommas: (number: number) => string\n\thighlightReward: (currentIndex: null | number, pos: number) => string | undefined\n}\n\ninterface IRenderQuestions {\n\tcurrentQuestion: IQuestion | null,\n\tselectedAnswers: string[],\n\tisCorrectAnswers: boolean | null,\n\thandleSelectAnswer: (selectedOption: string) => void\n}\n\nexport const QuestionPage: React.FC=() => {\n\tconst dispatch=useAppDispatch()\n\tconst navigate=useNavigate()\n\tconst currentQuestion=useSelector(selectCurrentQuestion)\n\tconst currentIndex=useSelector(selectCurrentIndex)\n\tconst numberOfCorrectAnswers=useSelector(selectNumberOfAnswers)\n\tconst options=currentQuestion?.options||[];\n\n\tconst [selectedAnswers, setSelectedAnswers]=useState<string[]>([]);\n\tconst [isCorrectAnswers, setIsCorrectAnswers]=useState<boolean | null>(null);\n\n\tconst handleSelectAnswer=(selectedOption: string) => {\n\t\tif (selectedAnswers.length < numberOfCorrectAnswers) {\n\t\t\tsetSelectedAnswers((prevSelected) => [...prevSelected, selectedOption]);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tif (selectedAnswers.length === 0) {\n\t\t\tsetIsCorrectAnswers(null);\n\t\t\treturn;\n\t\t}\n\n\t\tconst timeoutId: NodeJS.Timeout=setTimeout(() => {\n\t\t\tconst correctAnswers=options\n\t\t\t\t.filter((option) => selectedAnswers.includes(option.label))\n\t\t\t\t.map((option) => option.isCorrect);\n\n\t\t\tconst isCorrect: boolean=correctAnswers.length === numberOfCorrectAnswers&&correctAnswers.every(item => item === true);\n\n\t\t\tsetIsCorrectAnswers(isCorrect);\n\t\t\tif (isCorrect) {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tdispatch(nextQuestionAction())\n\t\t\t\t}, 1500)\n\t\t\t} else {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tnavigate('/final')\n\t\t\t\t}, 1500)\n\t\t\t}\n\t\t}, 2000);\n\n\t\treturn () => clearTimeout(timeoutId); // Очищення таймеру при зміні стану\n\t}, [selectedAnswers, options, numberOfCorrectAnswers, dispatch, navigate]);\n\n\tuseEffect(() => {\n\t\tif (currentIndex !== null&&currentIndex < questions.questions.length) {\n\t\t\tsetSelectedAnswers([])\n\t\t} else {\n\t\t\tnavigate('/final')\n\t\t}\n\t}, [currentIndex])\n\n\n\tconst renderQuestionOptions=(\n\t\t{\n\t\t\tcurrentQuestion,\n\t\t\tselectedAnswers,\n\t\t\tisCorrectAnswers,\n\t\t\thandleSelectAnswer\n\t\t}: IRenderQuestions\n\t) => {\n\t\treturn currentQuestion?.options.map((option: {\n\t\t\tlabel: string,\n\t\t\tvalue: string,\n\t\t\tisCorrect: boolean\n\t\t}, index: number) => {\n\t\t\tconst isSelected=selectedAnswers.includes(option.label);\n\t\t\tconst isCorrect=isCorrectAnswers !== null && isSelected && isCorrectAnswers;\n\t\t\tconst isWrong=isCorrectAnswers !== null && isSelected && !isCorrectAnswers;\n\t\t\tconst optionCellStyles: {\n\t\t\t\tselected?: boolean;\n\t\t\t\tcorrect?: boolean;\n\t\t\t\twrong?: boolean;\n\t\t\t}={};\n\n\t\t\tif (isSelected) {\n\t\t\t\toptionCellStyles.selected=true;\n\t\t\t}\n\t\t\tif (isCorrect) {\n\t\t\t\toptionCellStyles.selected=false\n\t\t\t\toptionCellStyles.correct=true;\n\t\t\t}\n\t\t\tif (isWrong) {\n\t\t\t\toptionCellStyles.selected=false\n\t\t\t\toptionCellStyles.wrong=true;\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<OptionCell\n\t\t\t\t\tkey={option.label}\n\t\t\t\t\tonClick={() => handleSelectAnswer(option.label)}\n\t\t\t\t\tstyle={optionCellStyles}\n\t\t\t\t>\n\t\t\t\t\t<span className={\"Options-label\"}>{option.label}</span>\n\t\t\t\t\t<span className={\"Options-value\"}>{option.value}</span>\n\t\t\t\t</OptionCell>\n\t\t\t);\n\t\t});\n\t};\n\n\tconst renderRewards=({questions, currentIndex, highlightReward, formatNumberWithCommas}: IRenderRewards) => {\n\t\treturn questions\n\t\t\t.map((reward: string, index: number) => {\n\t\t\t\tconst rewardColor=highlightReward(currentIndex, index);\n\t\t\t\treturn (\n\t\t\t\t\t<OptionCell\n\t\t\t\t\t\tkey={reward}\n\t\t\t\t\t\tclassName={`Reward`}\n\t\t\t\t\t\trewardColor={rewardColor}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span>${formatNumberWithCommas(Number(reward))}</span>\n\t\t\t\t\t</OptionCell>\n\t\t\t\t);\n\t\t\t})\n\t\t\t.reverse();\n\t};\n\treturn (\n\t\t<div className={\"QuestionPage-container\"}>\n\t\t\t<div className={\"Question-block\"}>\n\t\t\t\t<h1 className={\"Question-text\"}>{currentQuestion?.question}</h1>\n\t\t\t\t<div className={\"Options-container\"}>\n\t\t\t\t\t{renderQuestionOptions(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcurrentQuestion,\n\t\t\t\t\t\t\tselectedAnswers,\n\t\t\t\t\t\t\tisCorrectAnswers,\n\t\t\t\t\t\t\thandleSelectAnswer\n\t\t\t\t\t\t}\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={\"Reward-block\"}>\n\t\t\t\t{renderRewards({\n\t\t\t\t\tquestions: questions.questions.map(question => question.reward),\n\t\t\t\t\tcurrentIndex,\n\t\t\t\t\thighlightReward,\n\t\t\t\t\tformatNumberWithCommas\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</div>\n\n\t)\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}