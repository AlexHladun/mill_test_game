{"ast":null,"code":"var _jsxFileName = \"/Users/alistair/WebstormProjects/millionaire2/millionaire2/src/pages/QuestionPage/QuestionPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport OptionCell from \"../../components/OptionCell\";\nimport './QuestionPage.styles.css';\nimport questions from '../../gameConfig.json';\nimport { useSelector } from \"react-redux\";\nimport { selectCurrentQuestion, selectCurrentIndex } from \"../../redux/selectors\";\nimport { highlightReward } from \"../../utils\";\nimport { useAppDispatch } from \"../../utils/hooks\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const QuestionPage = () => {\n  _s();\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const currentQuestion = useSelector(selectCurrentQuestion);\n  const currentIndex = useSelector(selectCurrentIndex);\n  const options = currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.options;\n\n  // Стан для відстеження вибраної відповіді\n  // Стан для відстеження вибраної відповіді\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n\n  // Стан для відстеження статусу правильності відповіді\n  const [isCorrectAnswer, setIsCorrectAnswer] = useState(null);\n  useEffect(() => {\n    if (!selectedAnswer) {\n      setIsCorrectAnswer(null);\n      return;\n    }\n\n    // Перевірка, чи обрана відповідь правильна\n    const selectedOption = options === null || options === void 0 ? void 0 : options.find(option => option.label === selectedAnswer);\n    if (selectedOption) {\n      setIsCorrectAnswer(selectedOption.isCorrect);\n    }\n\n    // За 3 секунди скидаємо стан вибраної відповіді\n    const timeoutId = setTimeout(() => {\n      setSelectedAnswer(null);\n      setIsCorrectAnswer(null);\n    }, 3000);\n    return () => clearTimeout(timeoutId); // Очищення таймеру при зміні стану\n  }, [selectedAnswer, options]);\n\n  // const handleSelectAnswer=(label: string) => {\n  // \tif (selectedAnswer === '') {\n  // \t\tsetSelectedAnswer(label)\n  // \t}\n  // }\n  // const handleCheckAnswer=() => {\n  // \tif (currentQuestion?.rightAnswers.includes(selectedAnswer)) {\n  // \t\t// dispatch(nextQuestionAction())\n  // \t} else {\n  // \t\tnavigate('/final')\n  // \t}\n  // }\n  // useEffect(() => {\n  // \tif (currentIndex !== null&&currentIndex < 12) {\n  // \t\tsetSelectedAnswer('')\n  // \t} else {\n  // \t\tnavigate('/final')\n  // \t}\n  // }, [currentIndex])\n  //\n  // useEffect(() => {\n  // \tif (selectedAnswer) {\n  // \t\thandleCheckAnswer()\n  // \t}\n  // }, [selectedAnswer])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"QuestionPage-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Question-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"Question-text\",\n        children: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Options-container\",\n        children: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.options.map((option, index) => {\n          return /*#__PURE__*/_jsxDEV(OptionCell, {\n            onClick: () => setSelectedAnswer(option.label),\n            className: `\n            \t\t\t\t\t\t\t${selectedAnswer === option.label ? 'selected' : ''}\n            \t\t\t\t\t\t\t${isCorrectAnswer && option.label === selectedAnswer && option.isCorrect ? 'correct' : ''}\n            \t\t\t\t\t\t\t${isCorrectAnswer && option.label === selectedAnswer && !option.isCorrect ? 'wrong' : ''}\n          \t\t\t\t\t\t\t`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"Options-label\",\n              children: option.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"Options-value\",\n              children: option.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 9\n            }, this)]\n          }, option.label, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 8\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Reward-block\",\n      children: questions.questions.map(({\n        reward\n      }, index) => /*#__PURE__*/_jsxDEV(OptionCell, {\n        className: `Reward`,\n        rewardColor: `${highlightReward(currentIndex, index)}`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"$\", reward]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 79\n        }, this)\n      }, reward, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 59\n      }, this)).reverse()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 3\n  }, this);\n};\n_s(QuestionPage, \"Zlm9X711WyeOfkQYQi5bRymn4lM=\", false, function () {\n  return [useAppDispatch, useNavigate, useSelector, useSelector];\n});\n_c = QuestionPage;\nvar _c;\n$RefreshReg$(_c, \"QuestionPage\");","map":{"version":3,"names":["React","useEffect","useState","OptionCell","questions","useSelector","selectCurrentQuestion","selectCurrentIndex","highlightReward","useAppDispatch","useNavigate","jsxDEV","_jsxDEV","QuestionPage","_s","dispatch","navigate","currentQuestion","currentIndex","options","selectedAnswer","setSelectedAnswer","isCorrectAnswer","setIsCorrectAnswer","selectedOption","find","option","label","isCorrect","timeoutId","setTimeout","clearTimeout","className","children","question","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","value","reward","rewardColor","reverse","_c","$RefreshReg$"],"sources":["/Users/alistair/WebstormProjects/millionaire2/millionaire2/src/pages/QuestionPage/QuestionPage.tsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\n\nimport OptionCell from \"../../components/OptionCell\";\nimport './QuestionPage.styles.css'\nimport questions from '../../gameConfig.json'\nimport {useSelector} from \"react-redux\";\nimport {selectCurrentQuestion, selectCurrentIndex} from \"../../redux/selectors\";\nimport {highlightReward} from \"../../utils\";\nimport {useAppDispatch} from \"../../utils/hooks\";\nimport {nextQuestionAction} from \"../../redux/actions\";\nimport {useNavigate} from \"react-router-dom\";\n\nexport const QuestionPage: React.FC=() => {\n\tconst dispatch=useAppDispatch()\n\tconst navigate=useNavigate()\n\tconst currentQuestion=useSelector(selectCurrentQuestion)\n\tconst currentIndex=useSelector(selectCurrentIndex)\n\n\tconst options=currentQuestion?.options;\n\n\t// Стан для відстеження вибраної відповіді\n\t// Стан для відстеження вибраної відповіді\n\tconst [selectedAnswer, setSelectedAnswer] = useState<string | null>(null);\n\n\t// Стан для відстеження статусу правильності відповіді\n\tconst [isCorrectAnswer, setIsCorrectAnswer] = useState<boolean | null>(null);\n\n\tuseEffect(() => {\n\t\tif (!selectedAnswer) {\n\t\t\tsetIsCorrectAnswer(null);\n\t\t\treturn;\n\t\t}\n\n\t\t// Перевірка, чи обрана відповідь правильна\n\t\tconst selectedOption = options?.find((option) => option.label === selectedAnswer);\n\t\tif (selectedOption) {\n\t\t\tsetIsCorrectAnswer(selectedOption.isCorrect);\n\t\t}\n\n\t\t// За 3 секунди скидаємо стан вибраної відповіді\n\t\tconst timeoutId = setTimeout(() => {\n\t\t\tsetSelectedAnswer(null);\n\t\t\tsetIsCorrectAnswer(null);\n\t\t}, 3000);\n\n\t\treturn () => clearTimeout(timeoutId); // Очищення таймеру при зміні стану\n\t}, [selectedAnswer, options]);\n\n\n\t// const handleSelectAnswer=(label: string) => {\n\t// \tif (selectedAnswer === '') {\n\t// \t\tsetSelectedAnswer(label)\n\t// \t}\n\t// }\n\t// const handleCheckAnswer=() => {\n\t// \tif (currentQuestion?.rightAnswers.includes(selectedAnswer)) {\n\t// \t\t// dispatch(nextQuestionAction())\n\t// \t} else {\n\t// \t\tnavigate('/final')\n\t// \t}\n\t// }\n\t// useEffect(() => {\n\t// \tif (currentIndex !== null&&currentIndex < 12) {\n\t// \t\tsetSelectedAnswer('')\n\t// \t} else {\n\t// \t\tnavigate('/final')\n\t// \t}\n\t// }, [currentIndex])\n\t//\n\t// useEffect(() => {\n\t// \tif (selectedAnswer) {\n\t// \t\thandleCheckAnswer()\n\t// \t}\n\t// }, [selectedAnswer])\n\n\treturn (\n\t\t<div className={\"QuestionPage-container\"}>\n\t\t\t<div className={\"Question-block\"}>\n\t\t\t\t<h1 className={\"Question-text\"}>{currentQuestion?.question}</h1>\n\t\t\t\t<div className={\"Options-container\"}>\n\t\t\t\t\t{currentQuestion?.options.map((option: {\n\t\t\t\t\t\tlabel: string;\n\t\t\t\t\t\tvalue: string,\n\t\t\t\t\t\tisCorrect: boolean\n\t\t\t\t\t}, index: number) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<OptionCell\n\t\t\t\t\t\t\t\tkey={option.label}\n\t\t\t\t\t\t\t\tonClick={() => setSelectedAnswer(option.label)}\n\t\t\t\t\t\t\t\tclassName={`\n            \t\t\t\t\t\t\t${selectedAnswer === option.label ? 'selected' : ''}\n            \t\t\t\t\t\t\t${isCorrectAnswer && option.label === selectedAnswer && option.isCorrect ? 'correct' : ''}\n            \t\t\t\t\t\t\t${isCorrectAnswer && option.label === selectedAnswer && !option.isCorrect ? 'wrong' : ''}\n          \t\t\t\t\t\t\t`}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span className={\"Options-label\"}>{option.label}</span>\n\t\t\t\t\t\t\t\t<span className={\"Options-value\"}>{option.value}</span>\n\t\t\t\t\t\t\t</OptionCell>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={\"Reward-block\"}>\n\t\t\t\t{questions.questions.map(({reward}, index: number) => <OptionCell key={reward}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  className={`Reward`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  rewardColor={`${highlightReward(currentIndex, index)}`}><span>${reward}</span></OptionCell>).reverse()}\n\t\t\t</div>\n\t\t</div>\n\t)\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}